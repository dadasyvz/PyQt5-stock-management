# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'kasa_ekrani.ui'
#
# Created by: PyQt5 UI code generator 5.13.1
#
# WARNING! All changes made in this file will be lost!

import sqlite3
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow_3(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 900)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 900))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 900))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 20, 171, 51))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(200, 30, 381, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(200, 100, 381, 41))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(640, 100, 241, 41))
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(200, 190, 381, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 180, 171, 51))
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(200, 260, 381, 31))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 250, 171, 51))
        self.label_3.setObjectName("label_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(200, 330, 381, 31))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 320, 171, 51))
        self.label_4.setObjectName("label_4")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(640, 260, 251, 41))
        self.pushButton_3.setObjectName("pushButton_3")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(200, 400, 701, 192))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(200, 610, 371, 41))
        self.pushButton_4.setObjectName("pushButton_4")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(200, 660, 371, 71))
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(650, 610, 251, 111))
        self.pushButton_5.setObjectName("pushButton_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "                                                                                                       KASA EKRANI"))
        self.label.setText(_translate("MainWindow", "BARKOD"))
        self.pushButton.setText(_translate("MainWindow", "SORGULA"))
        self.pushButton_2.setText(_translate("MainWindow", "TEMIZLE"))
        self.label_2.setText(_translate("MainWindow", "CINS"))
        self.label_3.setText(_translate("MainWindow", "FIYAT"))
        self.label_4.setText(_translate("MainWindow", "ADET"))
        self.pushButton_3.setText(_translate("MainWindow", "ALIM"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "CINS"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "FIYAT"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "ADET"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "TUTAR"))
        self.pushButton_4.setText(_translate("MainWindow", "ALIM"))
        self.pushButton_5.setText(_translate("MainWindow", "ODEME"))

        self.pushButton.clicked.connect(self.Query)
        self.pushButton_3.clicked.connect(self.CList)
        self.pushButton_4.clicked.connect(self.CBuy)
        self.pushButton_5.clicked.connect(self.CPayment)
        self.pushButton_2.clicked.connect(self.CClean)


    def Query(self):
        self.baglanti=sqlite3.connect("stock.db")
        self.cur=self.baglanti.cursor()

        barkod=self.lineEdit.text()

        self.cur.execute("SELECT 'clean' AS tablo,price,kind FROM clean WHERE code=? UNION ALL SELECT 'fruit' AS tablo,price,kind FROM fruit WHERE code=? UNION ALL SELECT 'meat' AS tablo,price,kind FROM meat WHERE code=? UNION ALL SELECT 'legumes' AS tablo,price,kind FROM legumes WHERE code=?",(int(barkod),int(barkod),int(barkod),int(barkod)))
        data=self.cur.fetchall()
        # print(data)

        self.lineEdit_2.setText(data[0][2])
        self.lineEdit_3.setText(str(data[0][1]))

    def CList(self):

        kind=self.lineEdit_2.text()
        price=self.lineEdit_3.text()
        piece=self.lineEdit_4.text()

        table=[]
        table_=[]
        table.append(kind)
        table.append(price)
        table.append(piece)
        table.append(int(price)*int(piece))
        table=tuple(table)
        table_.append(table)

        self.tableWidget.insertRow(0)
        for row,form in enumerate(table_):
            for column,item in enumerate(form):
                self.tableWidget.setItem(row,column,QtWidgets.QTableWidgetItem(str(item)))
                column+=1
            row_position=self.tableWidget.rowCount()
            self.tableWidget.insertRow(row_position)


        self.lineEdit.setText("")
        self.lineEdit_2.setText("")
        self.lineEdit_3.setText("")
        self.lineEdit_4.setText("")

    def CBuy(self):
        number_rows=self.tableWidget.rowCount()/2
        payment=0

        print(number_rows)

        for i in range(int(number_rows)):
            pay=int(self.tableWidget.item(i,3).text())
            payment+=pay

        self.textBrowser.setText(str(payment))

    def CPayment(self):
        from datetime import datetime
        date=datetime.now().strftime("%x")
        time=datetime.now().strftime("%X")
        # print(date)
        # print(time)

        self.baglanti_2=sqlite3.connect("stock.db")
        self.cur_2=self.baglanti_2.cursor()

        payment=self.textBrowser.toPlainText()

        self.cur_2.execute("INSERT INTO amount VALUES (?,?,?)",(int(payment),str(date),str(time)))
        self.baglanti_2.commit()

        data=[]
        allRows=self.tableWidget.rowCount()/2
        for row in range(int(allRows)):
            c=[]
            cins=self.tableWidget.item(row,0).text()
            miktar=self.tableWidget.item(row,2).text()
            c.append(cins)
            c.append(miktar)
            data.append(c)

        print(data)

        for i in data:
            kind=i[0]

            self.cur_2.execute("SELECT 'clean' AS tablo,code,piece FROM clean WHERE kind=? UNION ALL SELECT 'fruit' AS tablo,code,piece FROM fruit WHERE kind=? UNION ALL SELECT 'meat' AS tablo,code,piece FROM meat WHERE kind=? UNION ALL SELECT 'legumes' AS tablo,code,piece FROM legumes WHERE kind=?",(kind,kind,kind,kind))
            data_ = self.cur_2.fetchall()
            print(data_)

            if data_[0][0]=="clean":
                self.cur_2.execute("UPDATE clean SET piece=piece-? WHERE code=?",(int(i[1]),data_[0][1]))
                self.baglanti_2.commit()
            elif data_[0][0]=="fruit":
                self.cur_2.execute("UPDATE fruit SET piece=piece-? WHERE code=?",(int(i[1]),data_[0][1]))
                self.baglanti_2.commit()

            elif data_[0][0]=="meat":
                self.cur_2.execute("UPDATE meat SET piece=piece-? WHERE code=?",(int(i[1]),data_[0][1]))
                self.baglanti_2.commit()

            elif data_[0][0] == "legumes":
                self.cur_2.execute("UPDATE clean SET piece=piece-? WHERE code=?", (int(i[1]), data_[0][1]))
                self.baglanti_2.commit()

        self.statusbar.showMessage("the operation was succesfully")


    def CClean(self):
        while self.tableWidget.rowCount()>0:
            self.tableWidget.removeRow(0)
        self.textBrowser.setText("")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_3()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
